openapi: 3.0.3
info:
  title: Clinic-AI Intake Assistant API
  description: |
    A comprehensive medical consultation platform that provides AI-powered patient intake, 
    audio transcription, SOAP note generation, and prescription analysis.
    
    ## Features
    - **Patient Management**: Register patients and manage their medical records
    - **Intelligent Intake**: AI-powered adaptive questioning system for patient intake
    - **Audio Transcription**: Convert consultation audio to text using Whisper
    - **SOAP Notes**: Generate structured medical notes from transcripts
    - **Prescription Analysis**: Extract structured data from prescription images using Mistral AI
    - **Multi-language Support**: English and Spanish language support
    - **Doctor Preferences**: Configurable intake session parameters
    - **Vitals Management**: Store and retrieve patient vital signs
    - **Ad-hoc Transcription**: Standalone audio transcription services
    - **Action Plans**: Generate treatment plans from transcripts
    
    ## Architecture
    This API follows Clean Architecture principles with:
    - **Domain Layer**: Core business entities and rules
    - **Application Layer**: Use cases and business logic
    - **Infrastructure Layer**: External services and data persistence
    - **Presentation Layer**: FastAPI endpoints and schemas
    
    ## External Services
    - **OpenAI**: Question generation, SOAP notes, post-visit summaries
    - **Mistral AI**: Prescription image analysis and OCR
    - **Whisper**: Audio transcription (local or OpenAI API)
    - **MongoDB**: Document storage with Beanie ODM
    
  version: 1.0.0
  contact:
    name: Clinic-AI Support
    email: support@clinic-ai.com
  license:
    name: MIT
    url: https://opensource.org/licenses/MIT

servers:
  - url: http://localhost:8000
    description: Local development server
  - url: https://api.clinic-ai.com
    description: Production server

paths:
  /:
    get:
      summary: API Overview
      description: Get an overview of the API and available endpoints
      operationId: get_api_overview
      tags:
        - General
      responses:
        '200':
          description: API overview
          content:
            application/json:
              schema:
                type: object
                properties:
                  service:
                    type: string
                    example: "Clinic-AI Intake Assistant"
                  version:
                    type: string
                    example: "1.0.0"
                  environment:
                    type: string
                    example: "development"
                  status:
                    type: string
                    example: "running"
                  docs:
                    type: string
                    example: "/docs"
                  endpoints:
                    type: object
                    properties:
                      health:
                        type: string
                        example: "/health"
                      register_patient:
                        type: string
                        example: "POST /patients/"
                      answer_intake:
                        type: string
                        example: "POST /patients/consultations/answer"
                      transcribe_audio:
                        type: string
                        example: "POST /notes/transcribe"
                      generate_soap:
                        type: string
                        example: "POST /notes/soap/generate"
                      upload_prescriptions:
                        type: string
                        example: "POST /prescriptions/upload"
                      doctor_preferences:
                        type: string
                        example: "GET /doctor/preferences"
                      intake_session:
                        type: string
                        example: "POST /intake/start"
                      audio_management:
                        type: string
                        example: "GET /audio/"

  /health:
    get:
      summary: Health Check
      description: Check the overall health status of the service
      operationId: health_check
      tags:
        - Health
      responses:
        '200':
          description: Service is healthy
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HealthResponse'

  /health/ready:
    get:
      summary: Readiness Check
      description: Check if the service is ready to handle requests (database, external services)
      operationId: readiness_check
      tags:
        - Health
      responses:
        '200':
          description: Service is ready
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HealthResponse'
        '503':
          description: Service is not ready
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HealthResponse'

  /health/live:
    get:
      summary: Liveness Check
      description: Check if the service is alive (basic health check)
      operationId: liveness_check
      tags:
        - Health
      responses:
        '200':
          description: Service is alive
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HealthResponse'

  /patients/:
    post:
      summary: Register New Patient
      description: Register a new patient and start the intake process
      operationId: register_patient
      tags:
        - Patients
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RegisterPatientRequest'
      responses:
        '201':
          description: Patient registered successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RegisterPatientResponse'
        '400':
          description: Invalid request data
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '409':
          description: Patient already exists
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  /patients/consultations/answer:
    post:
      summary: Answer Intake Question
      description: Submit an answer to an intake question, optionally with medication images
      operationId: answer_intake_question
      tags:
        - Patients
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AnswerIntakeRequest'
          multipart/form-data:
            schema:
              type: object
              properties:
                patient_id:
                  type: string
                  description: Opaque patient ID
                visit_id:
                  type: string
                  description: Visit ID
                question_id:
                  type: string
                  description: Question ID being answered
                answer:
                  type: string
                  description: Patient's answer
                medication_images:
                  type: array
                  items:
                    type: string
                    format: binary
                  description: Optional medication images
      responses:
        '200':
          description: Answer processed successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AnswerIntakeResponse'
        '400':
          description: Invalid request data
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: Patient or visit not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '409':
          description: Intake already completed or duplicate question
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

    patch:
      summary: Edit Intake Answer
      description: Edit a previously submitted intake answer
      operationId: edit_intake_answer
      tags:
        - Patients
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EditAnswerRequest'
      responses:
        '200':
          description: Answer updated successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EditAnswerResponse'
        '400':
          description: Invalid request data
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: Patient, visit, or question not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  /patients/webhook/image:
    post:
      summary: Upload Single Medication Image
      description: Webhook endpoint for uploading a single medication image
      operationId: upload_medication_image
      tags:
        - Patients
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                patient_id:
                  type: string
                  description: Opaque patient ID
                visit_id:
                  type: string
                  description: Visit ID
                image:
                  type: string
                  format: binary
                  description: Medication image file
      responses:
        '200':
          description: Image uploaded successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  image_id:
                    type: string
                    description: Generated image ID
                  message:
                    type: string
                    example: "Image uploaded successfully"
        '400':
          description: Invalid request data
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  /patients/webhook/images:
    post:
      summary: Upload Multiple Medication Images
      description: Webhook endpoint for uploading multiple medication images
      operationId: upload_multiple_medication_images
      tags:
        - Patients
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                patient_id:
                  type: string
                  description: Opaque patient ID
                visit_id:
                  type: string
                  description: Visit ID
                images:
                  type: array
                  items:
                    type: string
                    format: binary
                  description: Medication image files
      responses:
        '200':
          description: Images uploaded successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  image_ids:
                    type: array
                    items:
                      type: string
                    description: Generated image IDs
                  message:
                    type: string
                    example: "Images uploaded successfully"
        '400':
          description: Invalid request data
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  /patients/images/{image_id}/content:
    get:
      summary: Get Medication Image Content
      description: Stream medication image content by ID
      operationId: get_medication_image_content
      tags:
        - Patients
      parameters:
        - name: image_id
          in: path
          required: true
          description: Image ID
          schema:
            type: string
      responses:
        '200':
          description: Image content
          content:
            image/*:
              schema:
                type: string
                format: binary
        '404':
          description: Image not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  /patients/{patient_id}/visits/{visit_id}/images:
    get:
      summary: List Medication Images
      description: List metadata for uploaded medication images for a specific visit
      operationId: list_medication_images
      tags:
        - Patients
      parameters:
        - name: patient_id
          in: path
          required: true
          description: Opaque patient ID
          schema:
            type: string
        - name: visit_id
          in: path
          required: true
          description: Visit ID
          schema:
            type: string
      responses:
        '200':
          description: List of medication images
          content:
            application/json:
              schema:
                type: object
                properties:
                  images:
                    type: array
                    items:
                      type: object
                      properties:
                        image_id:
                          type: string
                        filename:
                          type: string
                        upload_date:
                          type: string
                          format: date-time
                        file_size:
                          type: integer
        '404':
          description: Patient or visit not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  /patients/images/{image_id}:
    delete:
      summary: Delete Medication Image
      description: Delete a medication image by ID
      operationId: delete_medication_image
      tags:
        - Patients
      parameters:
        - name: image_id
          in: path
          required: true
          description: Image ID
          schema:
            type: string
      responses:
        '200':
          description: Image deleted successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "Image deleted successfully"
        '404':
          description: Image not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  /patients/summary/previsit:
    post:
      summary: Generate Pre-Visit Summary
      description: Generate an AI-powered pre-visit summary from intake data
      operationId: generate_pre_visit_summary
      tags:
        - Patients
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PreVisitSummaryRequest'
      responses:
        '200':
          description: Pre-visit summary generated successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PreVisitSummaryResponse'
        '400':
          description: Invalid request data
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: Patient or visit not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  /patients/{patient_id}/visits/{visit_id}/summary:
    get:
      summary: Get Pre-Visit Summary
      description: Retrieve a stored pre-visit summary
      operationId: get_pre_visit_summary
      tags:
        - Patients
      parameters:
        - name: patient_id
          in: path
          required: true
          description: Opaque patient ID
          schema:
            type: string
        - name: visit_id
          in: path
          required: true
          description: Visit ID
          schema:
            type: string
      responses:
        '200':
          description: Pre-visit summary
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PreVisitSummaryResponse'
        '404':
          description: Patient, visit, or summary not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  /patients/summary/postvisit:
    post:
      summary: Generate Post-Visit Summary
      description: Generate a patient-friendly post-visit summary for sharing
      operationId: generate_post_visit_summary
      tags:
        - Patients
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PostVisitSummaryRequest'
      responses:
        '200':
          description: Post-visit summary generated successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PostVisitSummaryResponse'
        '400':
          description: Invalid request data
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: Patient or visit not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  /patients/{patient_id}/visits/{visit_id}/summary/postvisit:
    get:
      summary: Get Post-Visit Summary
      description: Retrieve a stored post-visit summary
      operationId: get_post_visit_summary
      tags:
        - Patients
      parameters:
        - name: patient_id
          in: path
          required: true
          description: Opaque patient ID
          schema:
            type: string
        - name: visit_id
          in: path
          required: true
          description: Visit ID
          schema:
            type: string
      responses:
        '200':
          description: Post-visit summary
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PostVisitSummaryResponse'
        '404':
          description: Patient, visit, or summary not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  /notes/transcribe:
    post:
      summary: Transcribe Audio
      description: Queue audio transcription as a background task
      operationId: transcribe_audio
      tags:
        - Notes
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                patient_id:
                  type: string
                  description: Opaque patient ID
                visit_id:
                  type: string
                  description: Visit ID
                audio_file:
                  type: string
                  format: binary
                  description: Audio file to transcribe
                language:
                  type: string
                  enum: [en, sp]
                  default: en
                  description: Audio language
      responses:
        '202':
          description: Transcription queued successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "Transcription queued successfully"
                  task_id:
                    type: string
                    description: Background task ID
        '400':
          description: Invalid request data
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  /notes/soap/generate:
    post:
      summary: Generate SOAP Note
      description: Generate a SOAP note from a transcript using AI
      operationId: generate_soap_note
      tags:
        - Notes
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                patient_id:
                  type: string
                  description: Opaque patient ID
                visit_id:
                  type: string
                  description: Visit ID
                transcript:
                  type: string
                  description: Consultation transcript
                language:
                  type: string
                  enum: [en, sp]
                  default: en
                  description: Language for SOAP note generation
      responses:
        '200':
          description: SOAP note generated successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  soap_note:
                    type: object
                    properties:
                      subjective:
                        type: string
                        description: Patient's subjective complaints
                      objective:
                        type: string
                        description: Objective findings
                      assessment:
                        type: string
                        description: Clinical assessment
                      plan:
                        type: string
                        description: Treatment plan
                  language:
                    type: string
                    description: Language of the SOAP note
        '400':
          description: Invalid request data
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: Patient or visit not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  /notes/vitals:
    post:
      summary: Store Vitals
      description: Store objective vitals data for a visit
      operationId: store_vitals
      tags:
        - Notes
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - patient_id
                - visit_id
                - vitals
              properties:
                patient_id:
                  type: string
                  description: Opaque patient ID
                  example: "pat_abc123def456"
                visit_id:
                  type: string
                  description: Visit ID
                  example: "vis_xyz789uvw012"
                vitals:
                  type: object
                  properties:
                    systolic:
                      type: integer
                      example: 120
                    diastolic:
                      type: integer
                      example: 80
                    bpArm:
                      type: string
                      example: "Left"
                    bpPosition:
                      type: string
                      example: "Sitting"
                    heartRate:
                      type: integer
                      example: 72
                    rhythm:
                      type: string
                      example: "Regular"
                    respiratoryRate:
                      type: integer
                      example: 16
                    temperature:
                      type: number
                      example: 98.6
                    tempUnit:
                      type: string
                      example: "F"
                    tempMethod:
                      type: string
                      example: "Oral"
                    oxygenSaturation:
                      type: integer
                      example: 98
                    height:
                      type: number
                      example: 175.0
                    heightUnit:
                      type: string
                      example: "cm"
                    weight:
                      type: number
                      example: 70.0
                    weightUnit:
                      type: string
                      example: "kg"
                    painScore:
                      type: integer
                      example: 3
                    notes:
                      type: string
                      example: "Patient appears comfortable"
              example:
                patient_id: "pat_abc123def456"
                visit_id: "vis_xyz789uvw012"
                vitals:
                  systolic: 120
                  diastolic: 80
                  bpArm: "Left"
                  bpPosition: "Sitting"
                  heartRate: 72
                  rhythm: "Regular"
                  respiratoryRate: 16
                  temperature: 98.6
                  tempUnit: "F"
                  tempMethod: "Oral"
                  oxygenSaturation: 98
                  height: 175.0
                  heightUnit: "cm"
                  weight: 70.0
                  weightUnit: "kg"
                  painScore: 3
                  notes: "Patient appears comfortable"
      responses:
        '200':
          description: Vitals stored successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VitalsResponse'
        '400':
          description: Invalid request data
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: Patient or visit not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  /notes/{patient_id}/visits/{visit_id}/vitals:
    get:
      summary: Get Vitals
      description: Retrieve stored vitals data for a visit
      operationId: get_vitals
      tags:
        - Notes
      parameters:
        - name: patient_id
          in: path
          required: true
          description: Opaque patient ID
          schema:
            type: string
        - name: visit_id
          in: path
          required: true
          description: Visit ID
          schema:
            type: string
      responses:
        '200':
          description: Vitals data
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VitalsData'
        '404':
          description: Patient, visit, or vitals not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  /notes/{patient_id}/visits/{visit_id}/transcript:
    get:
      summary: Get Transcript
      description: Retrieve the stored transcript for a visit, including structured dialogue
      operationId: get_transcript
      tags:
        - Notes
      parameters:
        - name: patient_id
          in: path
          required: true
          description: Opaque patient ID
          schema:
            type: string
        - name: visit_id
          in: path
          required: true
          description: Visit ID
          schema:
            type: string
      responses:
        '200':
          description: Transcript data
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TranscriptionSessionDTO'
        '202':
          description: Transcript processing; client should retry after delay
        '404':
          description: Patient, visit, or transcript not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  /notes/{patient_id}/visits/{visit_id}/soap:
    get:
      summary: Get SOAP Note
      description: Retrieve the stored SOAP note for a visit
      operationId: get_soap_note
      tags:
        - Notes
      parameters:
        - name: patient_id
          in: path
          required: true
          description: Opaque patient ID
          schema:
            type: string
        - name: visit_id
          in: path
          required: true
          description: Visit ID
          schema:
            type: string
      responses:
        '200':
          description: SOAP note
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SoapNoteDTO'
        '404':
          description: Patient, visit, or SOAP note not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  /notes/{patient_id}/visits/{visit_id}/dialogue/structure:
    post:
      summary: Structure Dialogue
      description: Clean PII and structure a transcript into alternating Doctor/Patient JSON using an LLM
      operationId: structure_dialogue
      tags:
        - Notes
      parameters:
        - name: patient_id
          in: path
          required: true
          description: Opaque patient ID
          schema:
            type: string
        - name: visit_id
          in: path
          required: true
          description: Visit ID
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                transcript:
                  type: string
                  description: Raw transcript text to structure
                language:
                  type: string
                  enum: [en, sp]
                  default: en
                  description: Language of the transcript
      responses:
        '200':
          description: Dialogue structured successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  dialogue:
                    type: array
                    items:
                      oneOf:
                        - type: object
                          properties:
                            Doctor:
                              type: string
                              description: Doctor's statement
                              example: "Can you describe the chest pain you're experiencing?"
                        - type: object
                          properties:
                            Patient:
                              type: string
                              description: Patient's response
                              example: "It's a sharp pain in the center of my chest that started about 2 hours ago."
                    description: Array of dialogue turns, each containing either a Doctor or Patient key
                    example:
                      - Doctor: "Can you describe the chest pain you're experiencing?"
                      - Patient: "It's a sharp pain in the center of my chest that started about 2 hours ago."
                      - Doctor: "Have you taken any medications for this pain?"
                      - Patient: "No, I haven't taken anything yet."
        '400':
          description: Invalid request data
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: Patient or visit not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  /prescriptions/upload:
    post:
      summary: Upload Prescriptions
      description: Upload and analyze prescription images using Mistral AI
      operationId: upload_prescriptions
      tags:
        - Prescriptions
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                patient_id:
                  type: string
                  description: Opaque patient ID
                visit_id:
                  type: string
                  description: Visit ID
                prescription_images:
                  type: array
                  items:
                    type: string
                    format: binary
                  description: Prescription image files
      responses:
        '200':
          description: Prescriptions analyzed successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PrescriptionResponse'
        '400':
          description: Invalid request data
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  /audio/:
    get:
      summary: List Audio Files
      description: List audio file metadata with filtering options
      operationId: list_audio_files
      tags:
        - Audio
      parameters:
        - name: patient_id
          in: query
          description: Filter by patient ID
          schema:
            type: string
        - name: visit_id
          in: query
          description: Filter by visit ID
          schema:
            type: string
        - name: audio_type
          in: query
          description: Filter by audio type (adhoc, visit)
          schema:
            type: string
            enum: [adhoc, visit]
        - name: limit
          in: query
          description: Maximum number of results
          schema:
            type: integer
            minimum: 1
            maximum: 100
            default: 50
        - name: offset
          in: query
          description: Number of results to skip
          schema:
            type: integer
            minimum: 0
            default: 0
      responses:
        '200':
          description: List of audio files
          content:
            application/json:
              schema:
                type: object
                properties:
                  files:
                    type: array
                    items:
                      type: object
                      properties:
                        audio_id:
                          type: string
                        filename:
                          type: string
                        content_type:
                          type: string
                        file_size:
                          type: integer
                        duration_seconds:
                          type: number
                          format: float
                        patient_id:
                          type: string
                        visit_id:
                          type: string
                        adhoc_id:
                          type: string
                        audio_type:
                          type: string
                        created_at:
                          type: string
                          format: date-time
                        updated_at:
                          type: string
                          format: date-time
                  total_count:
                    type: integer
                  limit:
                    type: integer
                  offset:
                    type: integer

  /audio/{audio_id}:
    get:
      summary: Get Audio Metadata
      description: Retrieve metadata for a specific audio file
      operationId: get_audio_metadata
      tags:
        - Audio
      parameters:
        - name: audio_id
          in: path
          required: true
          description: Audio file ID
          schema:
            type: string
      responses:
        '200':
          description: Audio metadata
          content:
            application/json:
              schema:
                type: object
                properties:
                  audio_id:
                    type: string
                  filename:
                    type: string
                  content_type:
                    type: string
                  file_size:
                    type: integer
                  duration_seconds:
                    type: number
                    format: float
                  patient_id:
                    type: string
                  visit_id:
                    type: string
                  adhoc_id:
                    type: string
                  audio_type:
                    type: string
                  created_at:
                    type: string
                    format: date-time
                  updated_at:
                    type: string
                    format: date-time
        '404':
          description: Audio file not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

    delete:
      summary: Delete Audio File
      description: Delete an audio file
      operationId: delete_audio_file
      tags:
        - Audio
      parameters:
        - name: audio_id
          in: path
          required: true
          description: Audio file ID
          schema:
            type: string
      responses:
        '200':
          description: Audio file deleted successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "Audio file deleted successfully"
        '404':
          description: Audio file not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  /audio/{audio_id}/download:
    get:
      summary: Download Audio File
      description: Download an audio file
      operationId: download_audio_file
      tags:
        - Audio
      parameters:
        - name: audio_id
          in: path
          required: true
          description: Audio file ID
          schema:
            type: string
      responses:
        '200':
          description: Audio file content
          content:
            audio/*:
              schema:
                type: string
                format: binary
        '404':
          description: Audio file not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  /audio/{audio_id}/stream:
    get:
      summary: Stream Audio File
      description: Stream an audio file for playback
      operationId: stream_audio_file
      tags:
        - Audio
      parameters:
        - name: audio_id
          in: path
          required: true
          description: Audio file ID
          schema:
            type: string
      responses:
        '200':
          description: Audio file stream
          content:
            audio/*:
              schema:
                type: string
                format: binary
        '404':
          description: Audio file not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  /audio/stats/summary:
    get:
      summary: Get Audio Stats
      description: Get audio storage statistics
      operationId: get_audio_stats
      tags:
        - Audio
      responses:
        '200':
          description: Audio statistics
          content:
            application/json:
              schema:
                type: object
                properties:
                  total_files:
                    type: integer
                    description: Total number of audio files
                  adhoc_files:
                    type: integer
                    description: Number of ad-hoc audio files
                  visit_files:
                    type: integer
                    description: Number of visit audio files
                  other_files:
                    type: integer
                    description: Number of other audio files

  /doctor/preferences:
    get:
      summary: Get Doctor Preferences
      description: Retrieve the default doctor's preferences or return defaults if none are set
      operationId: get_preferences
      tags:
        - Doctor
      responses:
        '200':
          description: Doctor preferences
          content:
            application/json:
              schema:
                type: object
                properties:
                  selected_categories:
                    type: array
                    items:
                      type: string
                    description: Selected intake categories
                  max_questions:
                    type: integer
                    description: Maximum number of questions per session
                  language:
                    type: string
                    enum: [en, sp]
                    description: Preferred language
                  created_at:
                    type: string
                    format: date-time
                  updated_at:
                    type: string
                    format: date-time

    post:
      summary: Save Doctor Preferences
      description: Merge and persist doctor preferences
      operationId: save_preferences
      tags:
        - Doctor
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                selected_categories:
                  type: array
                  items:
                    type: string
                  description: Selected intake categories
                max_questions:
                  type: integer
                  description: Maximum number of questions per session
                language:
                  type: string
                  enum: [en, sp]
                  description: Preferred language
      responses:
        '200':
          description: Preferences saved successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "Preferences saved successfully"
                  preferences:
                    type: object
                    properties:
                      selected_categories:
                        type: array
                        items:
                          type: string
                      max_questions:
                        type: integer
                      language:
                        type: string
                      updated_at:
                        type: string
                        format: date-time

  /transcription:
    post:
      summary: Ad-hoc Transcription
      description: Perform ad-hoc audio transcription, save the audio to the database, and persist the transcript
      operationId: transcribe_audio_adhoc
      tags:
        - Transcription
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                audio_file:
                  type: string
                  format: binary
                  description: Audio file to transcribe
                language:
                  type: string
                  enum: [en, sp]
                  default: en
                  description: Audio language
      responses:
        '200':
          description: Transcription completed successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  adhoc_id:
                    type: string
                    description: Generated ad-hoc record ID
                  transcript:
                    type: string
                    description: Transcribed text
                  audio_id:
                    type: string
                    description: Stored audio file ID
                  language:
                    type: string
                  word_count:
                    type: integer
                  duration:
                    type: number
                    format: float
        '400':
          description: Invalid request data
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  /transcription/structure:
    post:
      summary: Structure Transcript Text
      description: Structure raw transcript text into a Doctor/Patient dialogue using an LLM
      operationId: structure_transcript_text
      tags:
        - Transcription
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                transcript:
                  type: string
                  description: Raw transcript text to structure
                language:
                  type: string
                  enum: [en, sp]
                  default: en
                  description: Language of the transcript
                adhoc_id:
                  type: string
                  description: Optional ad-hoc record ID to persist structured dialogue
      responses:
        '200':
          description: Transcript structured successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  structured_dialogue:
                    type: array
                    items:
                      type: object
                      properties:
                        speaker:
                          type: string
                          enum: [Doctor, Patient]
                        text:
                          type: string
                  language:
                    type: string
                  persisted:
                    type: boolean
                    description: Whether the structured dialogue was persisted
        '400':
          description: Invalid request data
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  /adhoc/action-plan:
    post:
      summary: Generate Action Plan
      description: Queue the generation of an action plan for an ad-hoc transcript as a background task
      operationId: generate_action_plan
      tags:
        - Transcription
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                adhoc_id:
                  type: string
                  description: Ad-hoc record ID
                transcript:
                  type: string
                  description: Transcript text
                structured_dialogue:
                  type: array
                  items:
                    type: object
                    properties:
                      speaker:
                        type: string
                        enum: [Doctor, Patient]
                      text:
                        type: string
                  description: Optional structured dialogue
                language:
                  type: string
                  enum: [en, sp]
                  default: en
                  description: Language of the transcript
      responses:
        '202':
          description: Action plan generation queued successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "Action plan generation queued successfully"
                  task_id:
                    type: string
                    description: Background task ID
        '400':
          description: Invalid request data
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: Ad-hoc record not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  /adhoc/{adhoc_id}/action-plan/status:
    get:
      summary: Get Action Plan Status
      description: Retrieve the status of action plan generation
      operationId: get_action_plan_status
      tags:
        - Transcription
      parameters:
        - name: adhoc_id
          in: path
          required: true
          description: Ad-hoc record ID
          schema:
            type: string
      responses:
        '200':
          description: Action plan status
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    enum: [pending, processing, completed, failed]
                  message:
                    type: string
                    description: Status message
                  created_at:
                    type: string
                    format: date-time
                  updated_at:
                    type: string
                    format: date-time
        '404':
          description: Ad-hoc record not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  /adhoc/{adhoc_id}/action-plan:
    get:
      summary: Get Action Plan
      description: Retrieve the generated action plan
      operationId: get_action_plan
      tags:
        - Transcription
      parameters:
        - name: adhoc_id
          in: path
          required: true
          description: Ad-hoc record ID
          schema:
            type: string
      responses:
        '200':
          description: Action plan
          content:
            application/json:
              schema:
                type: object
                properties:
                  action:
                    type: array
                    items:
                      type: string
                    description: Specific action items
                  plan:
                    type: object
                    properties:
                      immediate_care:
                        type: string
                        description: Immediate care recommendations
                      medications:
                        type: array
                        items:
                          type: object
                          properties:
                            name:
                              type: string
                            dosage:
                              type: string
                            duration:
                              type: string
                            notes:
                              type: string
                      follow_up:
                        type: object
                        properties:
                          timeline:
                            type: string
                          monitoring:
                            type: string
                          next_steps:
                            type: string
                      patient_education:
                        type: string
                      lifestyle_modifications:
                        type: string
                  confidence:
                    type: number
                    format: float
                    description: Confidence score (0-1)
                  reasoning:
                    type: string
                    description: Explanation of recommendations
                  generated_at:
                    type: string
                    format: date-time
        '404':
          description: Ad-hoc record or action plan not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  /intake/start:
    post:
      summary: Start Intake Session
      description: Initialize an intake session for a patient using the doctor's preferences
      operationId: start_intake_session
      tags:
        - Intake
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/IntakeStartRequest'
      responses:
        '200':
          description: Intake session started successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IntakeStartResponse'
        '400':
          description: Invalid request data
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  /intake/next-question:
    post:
      summary: Get Next Question
      description: Generate the next intake question based on session-configured limits and previous answers
      operationId: next_question
      tags:
        - Intake
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NextQuestionRequest'
      responses:
        '200':
          description: Next question generated successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NextQuestionResponse'
        '400':
          description: Invalid request data
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: Session not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  /transcription:
    post:
      summary: Ad-hoc Transcription
      description: Perform ad-hoc audio transcription, save the audio to the database, and persist the transcript
      operationId: transcribe_audio_adhoc
      tags:
        - Transcription
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                audio_file:
                  type: string
                  format: binary
                  description: Audio file to transcribe
                language:
                  type: string
                  enum: [en, sp]
                  default: en
                  description: Audio language
      responses:
        '200':
          description: Transcription completed successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AdhocTranscriptionResponse'
        '400':
          description: Invalid request data
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  /transcription/structure:
    post:
      summary: Structure Transcript Text
      description: Structure raw transcript text into a Doctor/Patient dialogue using an LLM
      operationId: structure_transcript_text
      tags:
        - Transcription
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/StructureTextRequest'
      responses:
        '200':
          description: Transcript structured successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StructureTextResponse'
        '400':
          description: Invalid request data
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  /transcription/adhoc/action-plan:
    post:
      summary: Generate Action Plan
      description: Queue the generation of an action plan for an ad-hoc transcript as a background task
      operationId: generate_action_plan
      tags:
        - Transcription
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ActionPlanRequest'
      responses:
        '202':
          description: Action plan generation queued successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ActionPlanResponse'
        '400':
          description: Invalid request data
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: Ad-hoc record not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  /transcription/adhoc/{adhoc_id}/action-plan/status:
    get:
      summary: Get Action Plan Status
      description: Retrieve the status of action plan generation
      operationId: get_action_plan_status
      tags:
        - Transcription
      parameters:
        - name: adhoc_id
          in: path
          required: true
          description: Ad-hoc record ID
          schema:
            type: string
      responses:
        '200':
          description: Action plan status
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ActionPlanStatusResponse'
        '404':
          description: Ad-hoc record not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  /transcription/adhoc/{adhoc_id}/action-plan:
    get:
      summary: Get Action Plan
      description: Retrieve the generated action plan
      operationId: get_action_plan
      tags:
        - Transcription
      parameters:
        - name: adhoc_id
          in: path
          required: true
          description: Ad-hoc record ID
          schema:
            type: string
      responses:
        '200':
          description: Action plan
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ActionPlanData'
        '404':
          description: Ad-hoc record or action plan not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

components:
  schemas:
    HealthResponse:
      type: object
      properties:
        status:
          type: string
          example: "healthy"
        timestamp:
          type: string
          format: date-time
        version:
          type: string
          example: "1.0.0"
        service:
          type: string
          example: "clinic-ai-backend"

    RegisterPatientRequest:
      type: object
      required:
        - name
        - age
        - gender
        - chief_complaint
      properties:
        name:
          type: string
          description: Patient's full name
          example: "John Doe"
        age:
          type: integer
          minimum: 0
          maximum: 150
          description: Patient's age
          example: 35
        gender:
          type: string
          enum: [male, female, other, prefer_not_to_say]
          description: Patient's gender
          example: "male"
        chief_complaint:
          type: string
          description: Primary reason for the visit
          example: "Chest pain and shortness of breath"
        language:
          type: string
          enum: [en, sp]
          default: en
          description: Preferred language for the consultation
          example: "en"

    RegisterPatientResponse:
      type: object
      properties:
        patient_id:
          type: string
          description: Opaque patient ID for external use
          example: "pat_abc123def456"
        visit_id:
          type: string
          description: Visit ID
          example: "vis_xyz789uvw012"
        first_question:
          type: object
          properties:
            question_id:
              type: string
              example: "q_001"
            question:
              type: string
              example: "Can you describe the chest pain you're experiencing?"
            category:
              type: string
              example: "symptoms"
            allows_images:
              type: boolean
              example: false
        language:
          type: string
          example: "en"
        message:
          type: string
          example: "Patient registered successfully. Please answer the first question to continue."

    AnswerIntakeRequest:
      type: object
      required:
        - patient_id
        - visit_id
        - question_id
        - answer
      properties:
        patient_id:
          type: string
          description: Opaque patient ID
          example: "pat_abc123def456"
        visit_id:
          type: string
          description: Visit ID
          example: "vis_xyz789uvw012"
        question_id:
          type: string
          description: Question ID being answered
          example: "q_001"
        answer:
          type: string
          description: Patient's answer
          example: "The pain is sharp and located in the center of my chest. It started about 2 hours ago."
        medication_images:
          type: array
          items:
            type: string
            format: binary
          description: Optional medication images (for medication-related questions)
        language:
          type: string
          enum: [en, sp]
          default: en
          description: Language of the answer
          example: "en"

    AnswerIntakeResponse:
      type: object
      properties:
        success:
          type: boolean
          example: true
        message:
          type: string
          example: "Answer recorded successfully"
        next_question:
          type: object
          properties:
            question_id:
              type: string
              example: "q_002"
            question:
              type: string
              example: "Have you taken any medications for this pain?"
            category:
              type: string
              example: "medications"
            allows_images:
              type: boolean
              example: true
        is_complete:
          type: boolean
          description: Whether the intake process is complete
          example: false
        progress:
          type: object
          properties:
            questions_answered:
              type: integer
              example: 1
            total_questions:
              type: integer
              example: 8
            completion_percentage:
              type: number
              format: float
              example: 12.5
        ocr_quality_info:
          $ref: '#/components/schemas/OCRQualityInfo'

    EditAnswerRequest:
      type: object
      required:
        - patient_id
        - visit_id
        - question_id
        - new_answer
      properties:
        patient_id:
          type: string
          description: Opaque patient ID
          example: "pat_abc123def456"
        visit_id:
          type: string
          description: Visit ID
          example: "vis_xyz789uvw012"
        question_id:
          type: string
          description: Question ID to edit
          example: "q_001"
        new_answer:
          type: string
          description: New answer text
          example: "The pain is more of a dull ache and has been present for about 3 hours."

    EditAnswerResponse:
      type: object
      properties:
        success:
          type: boolean
          example: true
        message:
          type: string
          example: "Answer updated successfully"
        updated_answer:
          type: object
          properties:
            question_id:
              type: string
              example: "q_001"
            answer:
              type: string
              example: "The pain is more of a dull ache and has been present for about 3 hours."
            updated_at:
              type: string
              format: date-time

    OCRQualityInfo:
      type: object
      properties:
        has_images:
          type: boolean
          description: Whether medication images were provided
          example: true
        image_count:
          type: integer
          description: Number of images processed
          example: 2
        processing_status:
          type: string
          enum: [success, failed, partial]
          description: Overall processing status
          example: "success"
        extracted_text:
          type: string
          description: Text extracted from images
          example: "Lisinopril 10mg daily, Metformin 500mg twice daily"
        confidence_score:
          type: number
          format: float
          minimum: 0
          maximum: 1
          description: Confidence score for OCR extraction
          example: 0.85

    PreVisitSummaryRequest:
      type: object
      required:
        - patient_id
        - visit_id
      properties:
        patient_id:
          type: string
          description: Opaque patient ID
          example: "pat_abc123def456"
        visit_id:
          type: string
          description: Visit ID
          example: "vis_xyz789uvw012"
        language:
          type: string
          enum: [en, sp]
          default: en
          description: Language for summary generation
          example: "en"

    PreVisitSummaryResponse:
      type: object
      properties:
        summary:
          type: string
          description: AI-generated pre-visit summary
          example: "35-year-old male presenting with chest pain and shortness of breath. Pain described as sharp, central chest pain that started 2 hours ago. No current medications. No known allergies. Vital signs pending."
        language:
          type: string
          example: "en"
        generated_at:
          type: string
          format: date-time
        word_count:
          type: integer
          example: 45

    PostVisitSummaryRequest:
      type: object
      required:
        - patient_id
        - visit_id
      properties:
        patient_id:
          type: string
          description: Opaque patient ID
          example: "pat_abc123def456"
        visit_id:
          type: string
          description: Visit ID
          example: "vis_xyz789uvw012"
        language:
          type: string
          enum: [en, sp]
          default: en
          description: Language for summary generation
          example: "en"

    PostVisitSummaryResponse:
      type: object
      properties:
        summary:
          type: object
          properties:
            diagnosis:
              type: string
              description: Primary diagnosis
              example: "Acute chest pain, likely musculoskeletal"
            treatment:
              type: string
              description: Treatment plan
              example: "Rest, NSAIDs as needed, follow up if symptoms worsen"
            follow_up:
              type: string
              description: Follow-up instructions
              example: "Return in 1 week or sooner if pain increases"
            medications:
              type: array
              items:
                type: string
              example: ["Ibuprofen 400mg every 6 hours as needed"]
        language:
          type: string
          example: "en"
        generated_at:
          type: string
          format: date-time

    PrescriptionResponse:
      type: object
      properties:
        patient_id:
          type: string
          description: Opaque patient ID
          example: "pat_abc123def456"
        visit_id:
          type: string
          description: Visit ID
          example: "vis_xyz789uvw012"
        medicines:
          type: array
          items:
            $ref: '#/components/schemas/Medicine'
        tests:
          type: array
          items:
            type: string
          description: Recommended tests
          example: ["Complete Blood Count", "Lipid Panel"]
        instructions:
          type: array
          items:
            type: string
          description: Patient instructions
          example: ["Take with food", "Monitor blood pressure"]
        raw_text:
          type: string
          description: Raw extracted text
          example: "Lisinopril 10mg daily, Metformin 500mg twice daily with meals"
        processing_status:
          type: string
          enum: [success, failed, disabled]
          description: Processing status
          example: "success"
        message:
          type: string
          description: Processing message
          example: "Successfully processed 2 out of 2 images"
        debug_info:
          type: object
          properties:
            total_files:
              type: integer
            successful_extractions:
              type: integer
            errors:
              type: array
              items:
                type: string

    Medicine:
      type: object
      properties:
        name:
          type: string
          description: Medicine name
          example: "Lisinopril"
        dose:
          type: string
          description: Dosage information
          example: "10mg"
        frequency:
          type: string
          description: How often to take
          example: "Once daily"
        duration:
          type: string
          description: Duration of treatment
          example: "Long-term"

    VitalsData:
      type: object
      required:
        - systolic
        - diastolic
        - heartRate
        - respiratoryRate
        - temperature
        - oxygenSaturation
        - weight
      properties:
        systolic:
          type: integer
          description: Systolic blood pressure
          example: 120
        diastolic:
          type: integer
          description: Diastolic blood pressure
          example: 80
        bpArm:
          type: string
          description: Blood pressure arm (Left/Right)
          example: "Left"
          default: ""
        bpPosition:
          type: string
          description: Blood pressure position (Sitting/Standing/Lying)
          example: "Sitting"
          default: ""
        heartRate:
          type: integer
          description: Heart rate in BPM
          example: 72
        rhythm:
          type: string
          description: Heart rhythm
          example: "Regular"
          default: ""
        respiratoryRate:
          type: integer
          description: Respiratory rate per minute
          example: 16
        temperature:
          type: number
          format: float
          description: Body temperature
          example: 98.6
        tempUnit:
          type: string
          enum: [C, F]
          description: Temperature unit
          example: "F"
          default: "C"
        tempMethod:
          type: string
          description: Temperature measurement method
          example: "Oral"
          default: ""
        oxygenSaturation:
          type: integer
          description: Oxygen saturation percentage
          example: 98
        height:
          type: number
          format: float
          description: Height in cm
          example: 175.0
        heightUnit:
          type: string
          description: Height unit
          example: "cm"
          default: "cm"
        weight:
          type: number
          format: float
          description: Weight in kg
          example: 70.0
        weightUnit:
          type: string
          description: Weight unit
          example: "kg"
          default: "kg"
        painScore:
          type: integer
          minimum: 0
          maximum: 10
          description: Pain score (0-10)
          example: 3
        notes:
          type: string
          description: Additional notes
          example: "Patient appears comfortable"
          default: ""

    VitalsRequest:
      type: object
      required:
        - patient_id
        - visit_id
        - vitals
      properties:
        patient_id:
          type: string
          description: Opaque patient ID
          example: "pat_abc123def456"
        visit_id:
          type: string
          description: Visit ID
          example: "vis_xyz789uvw012"
        vitals:
          type: object
          required:
            - systolic
            - diastolic
            - heartRate
            - respiratoryRate
            - temperature
            - oxygenSaturation
            - weight
          properties:
            systolic:
              type: integer
              description: Systolic blood pressure
              example: 120
            diastolic:
              type: integer
              description: Diastolic blood pressure
              example: 80
            bpArm:
              type: string
              description: Blood pressure arm (Left/Right)
              example: "Left"
              default: ""
            bpPosition:
              type: string
              description: Blood pressure position (Sitting/Standing/Lying)
              example: "Sitting"
              default: ""
            heartRate:
              type: integer
              description: Heart rate in BPM
              example: 72
            rhythm:
              type: string
              description: Heart rhythm
              example: "Regular"
              default: ""
            respiratoryRate:
              type: integer
              description: Respiratory rate per minute
              example: 16
            temperature:
              type: number
              format: float
              description: Body temperature
              example: 98.6
            tempUnit:
              type: string
              enum: [C, F]
              description: Temperature unit
              example: "F"
              default: "C"
            tempMethod:
              type: string
              description: Temperature measurement method
              example: "Oral"
              default: ""
            oxygenSaturation:
              type: integer
              description: Oxygen saturation percentage
              example: 98
            height:
              type: number
              format: float
              description: Height in cm
              example: 175.0
            heightUnit:
              type: string
              description: Height unit
              example: "cm"
              default: "cm"
            weight:
              type: number
              format: float
              description: Weight in kg
              example: 70.0
            weightUnit:
              type: string
              description: Weight unit
              example: "kg"
              default: "kg"
            painScore:
              type: integer
              minimum: 0
              maximum: 10
              description: Pain score (0-10)
              example: 3
            notes:
              type: string
              description: Additional notes
              example: "Patient appears comfortable"
              default: ""
      example:
        patient_id: "pat_abc123def456"
        visit_id: "vis_xyz789uvw012"
        vitals:
          systolic: 120
          diastolic: 80
          bpArm: "Left"
          bpPosition: "Sitting"
          heartRate: 72
          rhythm: "Regular"
          respiratoryRate: 16
          temperature: 98.6
          tempUnit: "F"
          tempMethod: "Oral"
          oxygenSaturation: 98
          height: 175.0
          heightUnit: "cm"
          weight: 70.0
          weightUnit: "kg"
          painScore: 3
          notes: "Patient appears comfortable"

    VitalsResponse:
      type: object
      properties:
        success:
          type: boolean
          example: true
        message:
          type: string
          example: "Vitals stored successfully"
        vitals_id:
          type: string
          example: "vis_xyz789uvw012:vitals"

    TranscriptionSessionDTO:
      type: object
      properties:
        audio_file_path:
          type: string
          description: Path to audio file
        transcript:
          type: string
          description: Transcribed text
        transcription_status:
          type: string
          enum: [queued, processing, completed, failed]
          description: Status of transcription
        started_at:
          type: string
          format: date-time
          description: When transcription started
        completed_at:
          type: string
          format: date-time
          description: When transcription completed
        error_message:
          type: string
          description: Error message if failed
        audio_duration_seconds:
          type: number
          format: float
          description: Audio duration in seconds
        word_count:
          type: integer
          description: Number of words in transcript
        structured_dialogue:
          type: array
          items:
            oneOf:
              - type: object
                properties:
                  Doctor:
                    type: string
                    description: Doctor's statement
              - type: object
                properties:
                  Patient:
                    type: string
                    description: Patient's response
          description: Structured dialogue between doctor and patient, each turn contains either Doctor or Patient key

    SoapNoteDTO:
      type: object
      properties:
        subjective:
          type: string
          description: Patient's subjective complaints
        objective:
          type: string
          description: Objective findings
        assessment:
          type: string
          description: Clinical assessment
        plan:
          type: string
          description: Treatment plan
        highlights:
          type: string
          description: Key highlights
        red_flags:
          type: string
          description: Red flags or concerns
        generated_at:
          type: string
          format: date-time
          description: When SOAP note was generated
        model_info:
          type: string
          description: AI model information
        confidence_score:
          type: number
          format: float
          description: Confidence score (0-1)

    IntakeStartRequest:
      type: object
      required:
        - patient_id
        - doctor_id
      properties:
        patient_id:
          type: string
          description: Patient ID
          example: "pat_abc123def456"
        doctor_id:
          type: string
          description: Doctor ID
          example: "D123"

    IntakeStartResponse:
      type: object
      properties:
        patient_id:
          type: string
          description: Patient ID
        doctor_id:
          type: string
          description: Doctor ID
        categories:
          type: array
          items:
            type: string
          description: Selected categories
        max_questions:
          type: integer
          description: Maximum questions
        asked_count:
          type: integer
          description: Questions asked so far
        created_at:
          type: string
          format: date-time
          description: Session creation time

    NextQuestionRequest:
      type: object
      required:
        - patient_id
      properties:
        patient_id:
          type: string
          description: Patient ID
          example: "pat_abc123def456"
        last_answer:
          type: string
          description: Last answer provided
          example: "I have chest pain"

    NextQuestionResponse:
      type: object
      properties:
        question:
          type: string
          description: Generated question
          example: "Can you describe the chest pain?"
        asked_count:
          type: integer
          description: Questions asked so far
        max_questions:
          type: integer
          description: Maximum questions allowed

    AdhocTranscriptionResponse:
      type: object
      properties:
        transcript:
          type: string
          description: Transcribed text
        language:
          type: string
          description: Language of transcript
        confidence:
          type: number
          format: float
          description: Confidence score
        duration:
          type: number
          format: float
          description: Audio duration in seconds
        word_count:
          type: integer
          description: Number of words
        filename:
          type: string
          description: Original filename
        adhoc_id:
          type: string
          description: Ad-hoc record ID

    StructureTextRequest:
      type: object
      required:
        - transcript
      properties:
        transcript:
          type: string
          description: Raw transcript text
        language:
          type: string
          enum: [en, sp]
          default: en
          description: Language of transcript
        adhoc_id:
          type: string
          description: Optional ad-hoc record ID

    StructureTextResponse:
      type: object
      properties:
        structured_dialogue:
          type: array
          items:
            oneOf:
              - type: object
                properties:
                  Doctor:
                    type: string
                    description: Doctor's statement
              - type: object
                properties:
                  Patient:
                    type: string
                    description: Patient's response
          description: Array of dialogue turns, each containing either a Doctor or Patient key
        language:
          type: string
        persisted:
          type: boolean
          description: Whether dialogue was persisted

    ActionPlanRequest:
      type: object
      required:
        - adhoc_id
        - transcript
      properties:
        adhoc_id:
          type: string
          description: Ad-hoc record ID
        transcript:
          type: string
          description: Transcript text
        structured_dialogue:
          type: array
          items:
            type: object
            properties:
              Doctor:
                type: string
              Patient:
                type: string
          description: Optional structured dialogue
        language:
          type: string
          enum: [en, sp]
          default: en
          description: Language of transcript

    ActionPlanResponse:
      type: object
      properties:
        adhoc_id:
          type: string
          description: Ad-hoc record ID
        status:
          type: string
          enum: [pending, processing, completed, failed]
          description: Action plan status
        message:
          type: string
          description: Status message

    ActionPlanStatusResponse:
      type: object
      properties:
        status:
          type: string
          enum: [pending, processing, completed, failed]
          description: Action plan status
        message:
          type: string
          description: Status message
        created_at:
          type: string
          format: date-time
          description: Creation time
        updated_at:
          type: string
          format: date-time
          description: Last update time

    ActionPlanData:
      type: object
      properties:
        action:
          type: array
          items:
            type: string
          description: Specific action items
        plan:
          type: object
          properties:
            immediate_care:
              type: string
              description: Immediate care recommendations
            medications:
              type: array
              items:
                type: object
                properties:
                  name:
                    type: string
                  dosage:
                    type: string
                  duration:
                    type: string
                  notes:
                    type: string
            follow_up:
              type: object
              properties:
                timeline:
                  type: string
                monitoring:
                  type: string
                next_steps:
                  type: string
            patient_education:
              type: string
            lifestyle_modifications:
              type: string
        confidence:
          type: number
          format: float
          description: Confidence score (0-1)
        reasoning:
          type: string
          description: Explanation of recommendations
        generated_at:
          type: string
          format: date-time
          description: Generation time

    ErrorResponse:
      type: object
      properties:
        error:
          type: string
          description: Error type
          example: "ValidationError"
        message:
          type: string
          description: Error message
          example: "Invalid patient data provided"
        details:
          type: object
          description: Additional error details
        timestamp:
          type: string
          format: date-time
          description: When the error occurred

  securitySchemes:
    ApiKeyAuth:
      type: apiKey
      in: header
      name: X-API-Key
      description: API key for authentication

tags:
  - name: General
    description: General API information
  - name: Health
    description: Health check endpoints
  - name: Patients
    description: Patient management and intake
  - name: Notes
    description: Medical notes, transcripts, SOAP notes, and vitals
  - name: Prescriptions
    description: Prescription image analysis
  - name: Audio
    description: Audio file management
  - name: Doctor
    description: Doctor preferences and settings
  - name: Transcription
    description: Ad-hoc transcription services and action plans
  - name: Intake
    description: Independent intake session management